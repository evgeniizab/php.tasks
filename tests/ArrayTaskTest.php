<?php


namespace App\tests;


use App\ArrayTask;
use PHPUnit\Framework\TestCase;

class ArrayTaskTest extends TestCase
{
    private $solve;

    protected function setUp() : void
    {
        $this->solve = new ArrayTask();
    }

    protected function tearDown(): void
    {
        unset($this->solve);
    }

    /**
     * 1 - Дан массив с элементами 'Привет, ', 'мир' и '!'.
     * Необходимо вывести на экран фразу 'Привет, мир!'.
     */
     public function test_array_task_1()
     {
         $this->assertEquals('Привет, мир!', $this->solve->Task1());
     }

    /**
     * 2 - Дан массив с числами. Запишите в новый массив только те числа, в которых есть цифра 5
     */
     public function test_array_task_2()
     {
         $array = [5,15,25,52,51];
         $this->assertEquals($array,  $this->solve->Task2());
     }

     /**
      * 3 - Задача Хитрое слияние массивов*
      * 1: Напишите функцию, которая будет сливать два массива таким образом: из, к
      * примеру, [1, 2, 3] и ['a', 'b', 'c'] она сделает [1, 'a', 2, 'b', 3, 'c'].
      * 2: Сделайте аналогичную функцию, которая параметрами будет принимать
      * не два массива, а произвольное количество (пусть функция параметром принимает
      * двухмерный массив, где его подмассивы – это то, что мы будем сливать).
      */
      public function test_array_task_3()
      {
          $array = [1, 'a', 2, 'b', 3, 'c'];
          $this->assertEquals($array,  $this->solve->Task3());
      }

      /**
       * 4 - Напишите функцию, которая корректно будет складывать часы и минуты.
       * Примеры: на вход функции подается такое – 1ч20мин+50мин –
       * в результатте функциявы ведет 2ч10мин.*** (Задача решается разными способами, приведите пример
       * одного из них)
       */
       public function test_array_task_4()
       {
           $value = '02:10:00';
           $this->assertEquals($value,  $this->solve->Task4());
       }

    /**
     * 5 - Дан многомерный массив $arr. Напишите функцию, которая принимает строки
     * вида 'строка1.строка2.строка3' – буквы разделенные точками, а возвращает элемент
     * многомерного массива $arr['строка1']['строка2']['строка3']. Количество точек в строке
     * может быть любым, вложенность массива тоже любая, ключи массива не содержат
     * точек.
     */
    public function test_array_task_5()
    {
        $value = 3;
        $this->assertEquals($value,  $this->solve->Task5());
    }



}